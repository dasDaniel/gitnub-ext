{"version":3,"file":"app.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/chrome.js","../src/store.js","../src/Btn.svelte","../src/Main.svelte","../src/Select.svelte","../src/Input.svelte","../src/WithBadge.svelte","../src/Detail.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached\n    const children = target.childNodes;\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        const seqLen = upper_bound(1, longest + 1, idx => children[m[idx]].claim_order, current) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        if (node !== target.actual_end_child) {\n            target.insertBefore(node, target.actual_end_child);\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append(target, node);\n    }\n    else if (node.parentNode !== target || (anchor && node.nextSibling !== anchor)) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                processNode(node);\n                nodes.splice(i, 1);\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        node.data = '' + data;\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTag();\n    }\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    return new HtmlTag(html_tag_nodes.slice(1, html_tag_nodes.length - 1));\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(claimed_nodes) {\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            if (this.l) {\n                this.n = this.l;\n            }\n            else {\n                this.h(html);\n            }\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.3' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const storeKey = \"gitnub1\";\r\n\r\nexport const getLocalStore = async () => {\r\n  // console.log(\" GET 🤷‍♂️ \");\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      chrome.storage.local.get(storeKey, (storage) => {\r\n        // console.log(\"🤷‍♂️ GET [chrome]\", JSON.stringify(storage));\r\n        if (storeKey in storage) {\r\n          resolve(storage[storeKey]);\r\n        }\r\n        storage[storeKey] = {};\r\n        chrome.storage.local.set(storage);\r\n        resolve(storage);\r\n      });\r\n    } catch (error) {\r\n      console.warn(error);\r\n      // fallback for local dev\r\n      let result = window.localStorage.getItem(storeKey);\r\n      resolve(JSON.parse(result));\r\n    }\r\n  });\r\n};\r\n\r\nexport const setLocalStore = (data) => {\r\n  // console.log(\"write \", JSON.stringify(data));\r\n  try {\r\n    chrome.storage.local.get(storeKey, (storage) => {\r\n      if (storeKey in storage === false) {\r\n        storage[storeKey] = {};\r\n      }\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          storage[storeKey][key] = data[key];\r\n        }\r\n      }\r\n      chrome.storage.local.set(storage);\r\n    });\r\n  } catch (error) {\r\n    console.warn(error);\r\n    // fallback for local dev\r\n    window.localStorage.setItem(storeKey, JSON.stringify(data));\r\n  }\r\n};\r\n","import { writable, get } from \"svelte/store\";\r\nimport { getLocalStore, setLocalStore } from \"./chrome\";\r\n\r\nconst VERSION = \"0.0.1\";\r\n\r\nexport const MERGE_TYPES = {\r\n  MERGE: \"merge\",\r\n  SQUASH: \"squash\",\r\n  REBASE: \"rebase\",\r\n};\r\n\r\n// extension data\r\nexport const repos = writable([]);\r\n// popup app state\r\nexport const appState = writable({});\r\nexport const loaded = writable(false);\r\n\r\ngetLocalStore().then((data) => {\r\n  if (data && data.repos && data.repos[0] && data.repos[0].name !== undefined) {\r\n    // use stored data\r\n    repos.set([...data.repos]);\r\n\r\n    let appStateAge = Date.now() - data.appStateTs;\r\n\r\n    // allow 10 minutes\r\n    console.log(appStateAge, data.appState);\r\n    if (appStateAge < 10 * 60 * 1000) {\r\n      if (data.version === VERSION && data.appState) {\r\n        console.log(data.appState);\r\n        if (data.appState.index !== undefined) {\r\n          appState.set(data.appState);\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    // new\r\n    repos.set([\r\n      {\r\n        name: \"DEFAULT\",\r\n        isActive: true,\r\n        repo: \".*\",\r\n        stages: [\r\n          {\r\n            from: \"$develop\",\r\n            to: \"$main\",\r\n            type: MERGE_TYPES.MERGE,\r\n          },\r\n        ],\r\n      },\r\n    ]);\r\n  }\r\n\r\n  repos.subscribe(() => get(loaded) && updateStore());\r\n  appState.subscribe(() => get(loaded) && updateStore());\r\n  loaded.set(true);\r\n});\r\n\r\nexport const addRepo = (setting) => {\r\n  if (setting === undefined) {\r\n    setting = {\r\n      name: \"NEW\",\r\n    };\r\n  }\r\n  repos.update((val) => [...val, setting]);\r\n  return get(repos).length - 1;\r\n};\r\n\r\nexport const selectRepo = (value) => {\r\n  console.log(\"selectRepo\", value);\r\n  if (value !== null && value >= 0 && value < get(repos).length) {\r\n    appState.set({ index: value });\r\n  } else {\r\n    resetAppState();\r\n  }\r\n};\r\n\r\nexport const removeRepo = (repoIndex) => {\r\n  appState.set({});\r\n  repos.update((val) => [...val.filter((r, i) => i !== repoIndex)]);\r\n};\r\n\r\nexport const removeActiveRepo = () => {\r\n  let index = get(appState).index;\r\n  removeRepo(index);\r\n};\r\n\r\nexport const getActiveRepo = () => {\r\n  let index = get(appState).index;\r\n  return get(repos)[index];\r\n};\r\n\r\nexport const resetAppState = () => {\r\n  appState.set({});\r\n};\r\n\r\nexport function updateActiveRepo(data) {\r\n  let index = get(appState).index;\r\n  if (index >= 0) {\r\n    repos.update((val) => {\r\n      return val.map((r, i) => {\r\n        if (i === index) return data;\r\n        return r;\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction updateStore() {\r\n  setLocalStore({\r\n    version: VERSION,\r\n    repos: get(repos),\r\n    appStateTs: Date.now(),\r\n    appState: get(appState),\r\n  });\r\n}\r\n","<button\n  on:click\n  on:submit\n  class=\"{$$props.class} inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-100\"\n  class:border-red-300={!!danger}\n  class:hover:bg-red-100={!!danger}\n  class:border-green-300={!!success}\n  class:hover:bg-green-100={!!success}><slot /></button\n>\n\n<script>\n  export let danger = false;\n  export let success = false;\n</script>\n","<div class=\"flow-root\">\r\n  <h2 class=\"text-md font-normal leading-normal text-center mt-4 mb-2\">\r\n    Repos\r\n  </h2>\r\n\r\n  <ul\r\n    role=\"list\"\r\n    class=\" mt-2 pt-2 border-t border-gray-300 -my-5 divide-y divide-gray-200\"\r\n  >\r\n    {#each $repos as { name, repo, isActive }, i}\r\n      <li class=\"py-4\">\r\n        <div class=\"flex items-center space-x-4\">\r\n          <div class=\"flex-1 min-w-0\">\r\n            <p\r\n              class=\"text-sm font-medium text-gray-900 truncate\"\r\n              class:text-gray-300={!isActive}\r\n            >\r\n              {name}\r\n            </p>\r\n            <p\r\n              class=\"text-sm text-gray-500 truncate\"\r\n              class:text-gray-200={!isActive}\r\n            >\r\n              {repo}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <Btn on:click={() => selectRepo(i)}>Edit</Btn>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    {/each}\r\n    <li class=\"py-4 center mt-4 flex justify-center items-center\">\r\n      <Btn on:click={createRepo}>CREATE RULE</Btn>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<script>\r\n  import { addRepo, repos, selectRepo } from \"./store.js\";\r\n  import Btn from \"./Btn.svelte\";\r\n\r\n  function createRepo() {\r\n    selectRepo(addRepo());\r\n  }\r\n</script>\r\n","<select\n  bind:value\n  class=\"{$$props.class ||\n    ''} w-full h-8 px-2 text-sm text-gray-700 placeholder-gray-600 border border-gray-400 rounded-lg focus:shadow-outline\"\n  ><slot /></select\n>\n\n<script>\n  export let value;\n</script>\n","<input\n  type=\"text\"\n  bind:value\n  class=\"{$$props.class ||\n    ''} w-full h-8 px-2 text-sm text-gray-700 placeholder-gray-600 border border-gray-400 rounded-lg focus:shadow-outline\"\n/>\n\n<script>\n  export let value;\n</script>\n","<span class=\"relative inline-block\">\n  <slot />\n  {#if show}\n    <span\n      class=\"absolute top-0 right-0 transform translate-x-1/2 -translate-y-1/2 bg-gray-300 rounded-full w-3 h-3 border-white border-2\"\n    />\n  {/if}\n</span>\n\n<script>\n  export let show = false;\n</script>\n","<div class=\"flex justify-between mt-2 py-4 {addingStage ? 'disabled' : ''}\">\r\n  <Btn danger disabled={detail.isDefault} on:click={removeActiveRepo}\r\n    >DELETE</Btn\r\n  >\r\n\r\n  <WithBadge show={unsavedChanges}>\r\n    <Btn success on:click={save}>SAVE</Btn>\r\n  </WithBadge>\r\n\r\n  <Btn on:click={resetAppState}>CANCEL</Btn>\r\n</div>\r\n\r\n{#if detail}\r\n  <div class=\"{addingStage ? 'disabled' : ''} pb-4 mb-4\">\r\n    <div class=\"grid grid-cols-3 gap-2 items-start\">\r\n      <!-- NAME -->\r\n      <label for=\"name\" class=\"text-sm font-medium text-gray-700 mt-px pt-2\"\r\n        >NAME:\r\n      </label>\r\n      {#if detail?._isDefault}\r\n        <Input\r\n          class=\"mt-0 col-span-2\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          bind:value={detail.name}\r\n          disabled\r\n        />\r\n      {:else}\r\n        <Input\r\n          class=\"mt-0 col-span-2\"\r\n          type=\"text\"\r\n          id=\"name\"\r\n          bind:value={detail.name}\r\n        />\r\n      {/if}\r\n\r\n      <!-- ENABLED -->\r\n      <label class=\"text-sm font-medium text-gray-700 mt-px pt-2\" for=\"isActive\"\r\n        >ENABLED:</label\r\n      >\r\n      <div class=\"col-span-2 mt-2\">\r\n        <input\r\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n          type=\"checkbox\"\r\n          id=\"isActive\"\r\n          bind:checked={detail.isActive}\r\n        />\r\n      </div>\r\n\r\n      <!-- URL -->\r\n      <label class=\"text-sm font-medium text-gray-700 mt-px pt-2\" for=\"repo\"\r\n        >URL (regex):</label\r\n      >\r\n      <Input\r\n        class=\"mt-0 col-span-2\"\r\n        type=\"text\"\r\n        id=\"repo\"\r\n        bind:value={detail.repo}\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <h2\r\n    class=\"text-md font-normal leading-normal mt-8 mb-2 {addingStage\r\n      ? 'disabled'\r\n      : ''}\"\r\n  >\r\n    Stages\r\n  </h2>\r\n\r\n  <div\r\n    class=\"grid grid-cols-10 gap-2 mt-2 pt-2 border-t border-gray-300 {addingStage\r\n      ? 'disabled'\r\n      : ''}\"\r\n  >\r\n    <!-- HEAD -->\r\n    <div class=\"col-span-3 text-center text-sm\">To:</div>\r\n    <div class=\"col-span-3 text-center text-sm\">From:</div>\r\n    <div class=\"col-span-3 text-center text-sm\">Type:</div>\r\n    <div />\r\n\r\n    <!-- STAGES -->\r\n    {#each detail.stages as { to, from, type }, i}\r\n      <!-- <div class=\"row mt-2 {addingStage?'disabled':''}\"> -->\r\n      <Input class=\"col-span-3 col-start-1\" type=\"text\" bind:value={to} />\r\n      <Input class=\"col-span-3\" type=\"text\" bind:value={from} />\r\n      <Select class=\"col-span-3\" bind:value={type}>\r\n        {#each Object.values(MERGE_TYPES) as mergetype}\r\n          <option value={mergetype}>{mergetype}</option>\r\n        {/each}\r\n      </Select>\r\n      <button class=\"btn btn-action remove\" on:click={() => removeStage(i)}\r\n        >&times;</button\r\n      >\r\n    {/each}\r\n\r\n    <!-- ADD STAGE BTN -->\r\n    {#if !detail.tempStage}\r\n      <div class=\"col-span-full flex justify-center\">\r\n        <Btn on:click={addStage}>ADD STAGE</Btn>\r\n      </div>\r\n    {/if}\r\n  </div>\r\n\r\n  {#if detail.tempStage}\r\n    <div class=\"grid grid-cols-10 gap-2 mt-2 pt-2 border-t border-gray-300 \">\r\n      <Input class=\"col-span-3\" type=\"text\" bind:value={detail.tempStage.to} />\r\n      <Input\r\n        class=\"col-span-3\"\r\n        type=\"text\"\r\n        bind:value={detail.tempStage.from}\r\n      />\r\n      <Select class=\"col-span-3\" bind:value={detail.tempStage.type}>\r\n        <option />\r\n        {#each Object.values(MERGE_TYPES) as mergetype}\r\n          <option value={mergetype}>{mergetype}</option>\r\n        {/each}\r\n      </Select>\r\n      <div class=\"col-span-9 flex justify-around\">\r\n        <Btn\r\n          success\r\n          on:click={saveNewStage}\r\n          disabled={!addEnabled}\r\n          class=\"btn btn-sm success\">ADD STAGE</Btn\r\n        >\r\n        <Btn on:click={clearNewStage} class=\"btn btn-sm\">CANCEL</Btn>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n{/if}\r\n\r\n<script>\r\n  import Btn from \"./Btn.svelte\";\r\n  import Select from \"./Select.svelte\";\r\n  import Input from \"./Input.svelte\";\r\n  import WithBadge from \"./WithBadge.svelte\";\r\n  import { derived } from \"svelte/store\";\r\n  import {\r\n    getActiveRepo,\r\n    resetAppState,\r\n    removeActiveRepo,\r\n    MERGE_TYPES,\r\n    appState,\r\n    selectRepo,\r\n    updateActiveRepo,\r\n  } from \"./store.js\";\r\n\r\n  let detail = {};\r\n  let activeRepo = getActiveRepo();\r\n\r\n  // copy from repos object\r\n  if (activeRepo) {\r\n    detail.repo = activeRepo.repo || \"\";\r\n    detail.isActive = activeRepo.isActive || \"\";\r\n    detail.isDefault = activeRepo.isDefault || \"\";\r\n    detail.name = activeRepo.name || \"\";\r\n    // deep copy\r\n    detail.stages = JSON.parse(JSON.stringify(activeRepo.stages || []));\r\n    // add initial values for non-repo variables\r\n    detail.tempStage = null;\r\n  }\r\n\r\n  // override with app state if details object exists\r\n  if ($appState.detail) {\r\n    detail.repo = $appState.detail.repo || \"\";\r\n    detail.isActive = $appState.detail.isActive || \"\";\r\n    detail.isDefault = $appState.detail.isDefault || \"\";\r\n    detail.name = $appState.detail.name || \"\";\r\n    detail.stages = $appState.detail.stages || [];\r\n    detail.tempStage = $appState.detail.tempStage || null;\r\n  }\r\n\r\n  function checkUnsavedChanges() {\r\n    let r = activeRepo;\r\n    if (detail.tempStage !== null) return true;\r\n    if (detail.repo !== r.repo) return true;\r\n    if (detail.isActive !== r.isActive) return true;\r\n    if (detail.name !== r.name) return true;\r\n    // deep-check ~ nested values should be in same order\r\n    if (JSON.stringify(detail.stages) !== JSON.stringify(r.stages || []))\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  function addStage() {\r\n    detail.tempStage = {\r\n      to: \"\",\r\n      from: \"\",\r\n      type: \"\",\r\n    };\r\n  }\r\n\r\n  function removeStage(index) {\r\n    detail.stages = detail.stages.filter((stage, i) => i !== index);\r\n  }\r\n\r\n  function saveNewStage() {\r\n    detail.stages = [\r\n      ...detail.stages,\r\n      {\r\n        ...detail.tempStage,\r\n      },\r\n    ];\r\n    detail.tempStage = null;\r\n  }\r\n\r\n  function clearNewStage() {\r\n    detail.tempStage = null;\r\n  }\r\n\r\n  let unsavedChanges = checkUnsavedChanges();\r\n\r\n  $: {\r\n    // register detail for reactivity and update appStore\r\n    $appState.detail = detail;\r\n    unsavedChanges = checkUnsavedChanges();\r\n  }\r\n\r\n  $: addEnabled =\r\n    detail.tempStage &&\r\n    detail.tempStage.to !== \"\" &&\r\n    detail.tempStage.from !== \"\" &&\r\n    detail.tempStage.type !== \"\";\r\n  $: addingStage = !!detail.tempStage;\r\n\r\n  const save = () => {\r\n    updateActiveRepo({\r\n      ...activeRepo,\r\n      repo: detail.repo,\r\n      isActive: detail.isActive,\r\n      isDefault: detail.isDefault,\r\n      name: detail.name,\r\n      stages: detail.stages,\r\n    });\r\n    selectRepo(null);\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .disabled {\r\n    opacity: 0.45;\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n","<main class=\"w-96 my-2 mx-auto p-3\">\n  <!-- {JSON.stringify($loaded)} -->\n  <!-- {JSON.stringify($appState)} -->\n  {#if $loaded === true}\n    {#if $appState.index >= 0}\n      <Detail />\n    {:else}\n      <Main />\n    {/if}\n  {/if}\n</main>\n\n<script>\n  import { appState, loaded } from \"./store.js\";\n  import Main from \"./Main.svelte\";\n  import Detail from \"./Detail.svelte\";\n</script>\n\n<style global lang=\"postcss\">\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","current_component","is_hydrating","upper_bound","low","high","key","mid","append","target","node","hydrate_init","children","childNodes","m","Int32Array","longest","seqLen","idx","claim_order","newLen","lis","toMove","last","cur","reverse","sort","j","anchor","insertBefore","init_hydrate","actual_end_child","parentElement","firstChild","nextSibling","parentNode","appendChild","insert","detach","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","toggle_class","toggle","classList","set_current_component","bubble","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","bound","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","storeKey","VERSION","MERGE_TYPES","MERGE","SQUASH","REBASE","repos","appState","loaded","async","reject","chrome","storage","get","error","console","warn","window","localStorage","getItem","JSON","parse","getLocalStore","appStateAge","Date","now","appStateTs","log","version","isActive","repo","stages","to","updateStore","selectRepo","resetAppState","removeActiveRepo","repoIndex","val","hasOwnProperty","setItem","stringify","setLocalStore","class","danger","success","setting","selected_option","querySelector","show","_isDefault","tempStage","values","isDefault","detail","activeRepo","getActiveRepo","checkUnsavedChanges","removeStage","stage","$appState","unsavedChanges","addEnabled","addingStage","updateActiveRepo","body"],"mappings":"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"}